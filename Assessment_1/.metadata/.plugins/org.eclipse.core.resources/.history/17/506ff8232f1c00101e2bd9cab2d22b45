package com.assessment1.serviceB.serviceImp;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.kafka.core.KafkaTemplate;
import org.springframework.stereotype.Service;

import com.assessment1.serviceB.dto.Dto;
import com.assessment1.serviceB.entity.Entity;
import com.assessment1.serviceB.repository.RepositoryB;
import com.assessment1.serviceB.service.ServiceB;

import lombok.extern.slf4j.Slf4j;

@Service
@Slf4j
public class ServiceBImp implements ServiceB {

    @Autowired
    RepositoryB repo;

    @Autowired
    ModelMapper modelMapper;

    @Autowired
    KafkaTemplate<String, String> kafkaTemp;

    @Override
    public Dto saveEntity(Dto obj) {
        log.info("Starting saveEntity with DTO: {}", obj);

        Entity entity = convertDtoToEntity(obj);
        log.debug("Converted DTO to Entity: {}", entity);

        entity = repo.save(entity);
        log.info("Entity saved to database: {}", entity);

        obj = convertEntityToDto(entity);
        log.debug("Converted Entity back to DTO: {}", obj);

        sendObject(obj);

        log.info("DTO sent to Kafka and returned: {}", obj);
        return obj;
    }

    public void sendObject(Dto obj) {
        log.info("Sending DTO to Kafka topic: {}", obj);
        kafkaTemp.send("ServerB-topic", obj.toString());
        log.debug("Kafka message sent for DTO: {}", obj);
    }

    Entity convertDtoToEntity(Dto dto) {
        log.debug("Mapping DTO to Entity: {}", dto);
        return modelMapper.map(dto, Entity.class);
    }

    Dto convertEntityToDto(Entity entity) {
        log.debug("Mapping Entity to DTO: {}", entity);
        return modelMapper.map(entity, Dto.class);
    }
}
